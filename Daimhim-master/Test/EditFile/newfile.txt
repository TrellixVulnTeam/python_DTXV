#### 2-8 LRUCache原理
#### 2-8 图片加载原理
#### 2-9 模块化实现（好处、原因）
#### 3-4 JVM
#### 2-3 视频加密传输
#### 3-1 统计启动时长，标准
#### 2-8 如何保持应用的稳定性
#### 2-11 ThreadLocal原理
#### 1-6 谈谈classloader
#### 1-2 动态布局
#### 3-5 热修复，插件化
#### 2-10 HashMap源码，SpareArray原理
#### 2-8 性能优化，怎么保证应用启动不卡顿
#### 2-8 怎么去除重复代码
#### 1-10 SP是进程同步的吗？有什么方法做到同步
#### 2-5 介绍SurfView
#### 2-10 HashMap实现原理，ConcurrentHashMap的实现原理
#### 1-1 BroadcastReceiver，LocalBroadcastReceiver区别
#### 2-2 Bundle机制
#### 2-6 Handler机制
#### 2-4 Android事件传递机制
#### 2-4 线程间操作List
#### 3-1 App启动流程，从点击桌面开始
#### 1-6 动态加载
#### 1-6 类加载
#### 3-4 OSGI
#### 2-13 Https请求慢的解决办法，DNS，携带数据，直接访问IP
#### 3-4 GC回收策略
#### 1-10 画出Android的大体架构图
#### 5-5 描述清点击Android Studio的build按钮后发生了什么
#### 1-10 大体说清一个应用程序安装到手机上时发生了什么
#### 3-4 对Dalvik、ART虚拟机有基本的了解
#### 2-3 Android上的Inter-Process-Communication跨进程通信时如何工作的
#### 1-6 App是如何沙箱化，为什么要这样做
#### 1-7 权限管理系统（底层的权限是如何进行grant的）
#### 2-3 进程和Application的生命周期
#### 2-1 系统启动流程Zygote进程->SytemServer进程->各种系统服务->应用进程
#### 2-8 RecyclerView和ListView的区别，性能
#### 2-10 排序，快速排序的实现
#### 2-10 树：B+树的介绍#### 图：有向无环图的解释
#### 2-13 TCP/UDP的区别
#### 2-11 synchronized与Lock的区别
#### 2-11 Java线程池
#### 1-6 Java中对象的生命周期
#### 3-4 类加载机制
#### 2-9 双亲委派模型
#### 2-9 MVP模式
#### 2-12 RxJava
#### 2-9 抽象类和接口的区别
#### 2-10 集合Set实现Hash怎么防止碰撞
#### 3-4 JVM内存区域 开线程影响那块内存
#### 1-6 垃圾收集机制
#### 2-10 二叉树 深度遍历与广度遍历
#### 2-10 B树、B+树
#### 2-6 消息机制
#### 2-3 进程调度
#### 2-3 进程与线程
#### 2-11 死锁
#### 2-3 进程状态
#### 1-6 JVM内存模型
#### 2-11 并发集合了解哪些
#### 2-11 CAS介绍  java.util.concurrent包中借助CAS实现了区别于synchronouse同步锁得一种乐观锁
#### 2-11 开启线程的三种方式，run（）和start（方法区别）
#### 2-10 常用数据结构简介
#### 2-10 判断环（链表环）
#### 2-10 排序，堆排序实现
#### 2-10 链表反转
#### 2-11 synchronized用法
#### 1-6 volatile用法
#### 1-7 动态权限适配方案，权限组的概念
#### 2-13 网络请求缓存处理，okhttp如何处理网络缓存的
#### 2-8 图片加载库相关，bitmap如何处理一张大图，如一张30mb的大图，如何预防OOM
#### 2-3 进程保活
#### 1-5 ListView图片加载错乱的原理和解决方案
#### 2-13 https相关，如何验证证书的合法性，https中哪里用了对称加密，哪里用了非对称加密，对加密算法（如RSA）等是否有了解
#### 1-1 广播（动态注册和静态注册区别，有序广播和标准广播）
#### 1-1 server生命周期
#### 2-11 多线程（关于AsyncTask缺陷引发的思考）
#### 1-10 数据库数据迁移
#### 2-9 设计模式相关（例如Android中那里是用了观察者模式，单利模式相关）
#### 2-10 x个苹果，一天只能吃一个、两个、或者三个，问多少天吃完
#### 2-13 TCP与UDP区别与应用（三次握手和四次挥手）涉及到部分细节（如client如何确定自己发送的消息被server收到）
#### 2-13 Websocket相关以及与socket的区别
#### 1-10 是否熟悉Android jni开发，jni如何调用Java层代码
#### 2-3 进程间通讯的方式
#### 1-6 Java注解
#### 1-3 计算一个View的嵌套层级
#### 2-9 项目组件化的理解
#### 2-11 多线程断点续传原理
#### 1-10 Android系统为什么会设计ContentProvider，进程共享和线程安全问题
#### 2-8 Android相关优化（如内存优化、网路优化、布局优化、点亮优化、业务优化）
#### 1-1 EventBus实现原理
#### 2-11 static synchronized方法的多线程访问和作用，同一个类里面两个synchronized方法，两个线程同时访问的问题
#### 1-6 内部类和静态内部类和匿名内部类，以及项目中的应用
#### 2-6 handler发消息给子线程，looper怎么启动
#### 3-1 Activity栈
#### 1-3 封装View的时候怎么知道View的大小
#### 2-10 ArrayList和LinkedList的区别。以及应用场景
#### 3-3 怎么启动service，service和Activity怎么进行数据交互
#### 1-1 下拉状态栏是不是影响Activity的生命周期，如果onStop的时候做了网络请求，OnResume的时候怎么恢复
#### 2-5 View渲染
#### 2-10 数据结构中堆的概念，堆排序
#### 2-11 死锁的概念，怎么避免死锁
#### 2-11 ReentrantLock、synchronized和volatile
#### 3-1 singleTask启动模式
#### 2-12 用到一些开源框架，介绍一个看过源码的，内部实现过程
#### 2-11 ReentrantLock的内部实现
#### 2-8 App启动崩溃异常捕捉
#### 2-4 事件传递机制的介绍
#### 1-5 ListView卡顿的原因以及优化策略
#### 2-10 二叉树，给出根节点和目标节点，找出从根结点到目标节点的路径
#### 2-9 模式MVP，MVC介绍
#### 2-10 集合的接口和具体实现类，介绍
#### 2-10 TreeMap具体实现
#### 2-11 手写生产者/消费者模式
#### 3-4 逻辑地址与物理地址，为什么使用逻辑地址
#### 2-10 一个无序，不重复数组，输出N个元伍，使得N个元素的和相加为M，给出时间复杂度、空间复杂度有。手写#### Android进程分类
#### 1-1 前台切换到后台，然后再回到前台，Activity生命周期回掉方法。弹出Dialog，生命周期回掉方法
#### 3-1 Activity启动模式
#### 2-12 RxJava的功能与原理实现
#### 1-5 RecyclerView的使用，原理，优化
#### 2-8 ANR的原因
#### 1-1 四大组件
#### 1-10 Activity之间的通信方式
#### 1-6 HashMap的实现，与HashSet的区别
#### 1-6 Java设计模式，观察者模式
#### 1-1 Activity与Fragment之间生命周期比较
#### 1-1 广播的使用方式，场景
#### 2-3 App唤醒其他进程的实现方式
#### 3-4 AndroidManifest的作用与理解
#### 2-11 List，Set，Map的区别
#### 2-11 HashSet与HashMap怎么判断集合元素重复
#### 1-6 Java中内存区域与垃圾回收机制
#### 1-1 EventBus作用，实现方式，代替EventBus的方式
#### 1-7 Android中开启摄像头的主要步骤
#### 2-11 wait/notify
#### 1-6 NIO
#### 1-1 AlertDialog，popupWindow，Activity区别
#### 1-6 String为什么要设计成不可变的
#### 1-1 Fragment各种情况下的生命周期
#### 1-1 Activity上有Dialog的时候按Home键时的生命周期
#### 1-1 横竖屏切换的时候，Activity各种情况下的生命周期
#### 1-10 Application和Activity的Context对象的区别
#### 1-8 序列化的作用，以及Android两种序列化的区别
#### 2-10 List和Map的实现方式以及储存方式
#### 1-6 静态内部类的设计意图
#### 2-11 线程如何关闭，以及如何防止线程的内存泄漏
#### 3-4 强引用、软引用、弱引用、虚引用之间的区别
#### 2-11 多线程：怎么用、有什么问题要注意
#### 2-11 Android线程有没有上限，线程池的上限
#### 2-8 OOM，内存泄漏
#### 2-8 ANR怎么分析解决
#### 1-2 LinearLayout、RelativeLayout、FrameLayout、AbsoluteLayout、TablelLayout的特性、使用场景
#### 1-5 ConstraintLayout的特性、使用场景
#### 2-5 如何实现Fragment的滑动
#### 2-8 ViewPager使用细节，如何设置成每次值初始化当前的Fragment，其他的不初始化
#### 1-5 ListView重用的是什么
#### 2-3 进程间通信的机制
#### 2-1 AIDL机制
#### 3-2 AsyncTash机制
#### 3-2 如何取消AsyncTask
#### 1-8 Android为什么引入Parcelable
#### 1-8 有没有尝试简化Parecelable的使用
#### 2-3 线程和进程的区别
#### 2-11 为什么要有线程，而不是仅仅用进程
#### 2-10 算法判断单链表成环与否
#### 2-11 如何实现线程同步
#### 2-10 Hashmap数据结构
#### 1-6 Object类的equal和hashcode方法重写，为什么
#### 2-10 hashmap如何put数据（hashmap从源码角度讲解）
#### 2-3 简述IPC
#### 1-10 Fragment之间传递数据的方式
#### 1-9 简述tcp四次挥手
#### 2-8 内存泄露的可能原因
#### 2-8 用IDE如何分析内存泄漏
#### 2-11 线程死锁的4个条件
#### 2-10 差值器&估值器
#### 2-12 okhttp源码
#### 2-12 RxJava简介及其源码解读
#### 2-8 性能优化如何分析systrace
#### 2-4 点击事件拦截，但是想传到下面的View，如何操作
#### 2-8 Glide源码
#### 2-11 ActivityThread相关
#### 1-6 synchronize的原理
#### 1-6 lock原理
#### 2-10 反转一个单项链表
#### 1-6 string to integer
#### 2-10 合并多个单有序链表（假设都是递增的）
#### 1-10 Android中数据储存方式
#### 1-2 微信主页面的实现方式
#### 1-2 微信上小红点的原理
#### 1-6 两个不重复的数组集合中，求共同的元素
#### 2-8 海量数据，内存中放不下，怎么求出
#### 1-6 Java中String的了解
#### 2-10 快速排序、堆排序的时间复杂度，空间复杂度
#### 2-12 RxJava的作用，与平时使用的异步操作来比，优势
#### 2-2 Binder机制介绍
#### 2-11 为什么不能在子线程更新UI
#### 3-4 JAM内存模型
#### 2-3 Android中进程内存的分配，能不能自己分配定额内存
#### 3-4 垃圾回收机制与调用System.gc（）区别
#### 1-4 Android中的几种动画
#### 1-10 android 中有哪几种解析xml的类？官方推荐哪种？以及它们的原理和区别。
#### 1-10 Uri类简介‍‍
#### 1-10 跟activity和Task 有关的 Intent启动方式有哪些？其含义？‍‍
#### 1-10 Intent类简介‍‍
#### 1-7 请解释下Android程序运行时权限与文件系统权限的区别。
#### 1-10 android系统的优势和不足
#### 1-10 一条最长的短信息约占多少byte
#### 1-10 如何将SQLite数据库(dictionary.db文件)与apk文件一起发布
#### 1-6 ”==”和equals方法究竟有什么区别？
#### 1-6 内部类可以引用它的包含类的成员吗？有没有什么限制？
#### 1-6 sleep()和wait()有什么区别?
#### 1-10 同步和异步有何异同，在什么情况下分别使用他们？
#### 1-6 error和exception有什么区别?
#### 1-6 谈谈final,finally,finalize的区别？
#### 1-6 运行时异常与一般异常有何异
#### 1-6 是否可以从一个static方法内部发出对非static方法的调用？
#### 1-6 重载和重写的区别
#### 1-10 描述一个完整的Android activity lifecycle
#### 1-10 怎么编译安卓系统？
#### 2-12 什么是aar?aar是jar有什么区别?
#### 2-9 如何保证Service在后台不被kill
#### 1-10 RemoteView的应用
#### 1-10 Bundle类简介
#### 1-10 ViewHolder为什么要被声明成静态内部类
#### 2-7 Android动画原理
#### 2-7 Android属性动画特性
#### 2-5 SurfaceView和View的区别
#### 2-13 移动端获取数据优化的几个点
#### 3-4 什么是Dalvik虚拟机
#### 1-2 layout_weight怎么理解？
#### 1-2 layout_gravity和gravity的区别？
#### 1-10 Android子线程更新UI的方式有几种？
#### 1-10 怎么在主线程中通知子线程？这样做有什么好处？
#### 1-10 Activity的缓存方法是怎么样的？
#### 1-10 SQLite的基础操作。
#### 1-10 如何判断应用被强制杀死？
#### 1-6 Json有什么优势？
#### 1-10 Asset和res目录的区别？
#### 2-8 Android怎么优化启动速度？
#### 1-9 网络分层
#### 2-10 二叉树如何转换为森林？
#### 2-8 MySQL有哪些日志，分别是什么用处？
#### 1-6 内部类访问局部变量的时候，为什么变量必须加上final修饰？
#### 1-6 反射的用途
#### 1-6 Java标识符命名规则